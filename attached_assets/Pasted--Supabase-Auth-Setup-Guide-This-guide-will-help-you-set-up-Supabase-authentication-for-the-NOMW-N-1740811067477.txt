# Supabase Auth Setup Guide

This guide will help you set up Supabase authentication for the NOMW (NotOnMyWatch) application.

## Creating a Supabase Project

1. Go to [Supabase](https://supabase.com/) and sign up or log in
2. Create a new project
3. Give your project a name and set a secure database password
4. Select the region closest to your users
5. Wait for the project to be created (this might take a few minutes)

## Getting API Keys

Once your project is created:

1. Go to the project dashboard
2. Click on the "Settings" icon in the sidebar (gear icon)
3. Go to "API" in the settings menu
4. You'll find two important keys:
   - `Project URL`: This is your `SUPABASE_URL`
   - `anon` public key: This is your `SUPABASE_ANON_KEY` for client-side
   - `service_role` secret key: This is your `SUPABASE_SERVICE_KEY` for server-side

## Configuring Auth Settings

1. In the sidebar, go to "Authentication" â†’ "Settings"
2. Under "URL Configuration":
   - Set the Site URL to your app's URL (e.g., `https://yourdomain.com`)
   - Add redirect URLs: 
     - `https://yourdomain.com/auth/callback`
     - `https://yourdomain.com/auth/reset-password`
     - For local development: `http://localhost:5000/auth/callback` and `http://localhost:5000/auth/reset-password`
3. Under "Email Templates", you can customize the email templates for:
   - Confirmation emails
   - Invitation emails
   - Magic link emails
   - Password reset emails

## Setting Environment Variables

### For Development

Create a `.env` file in the root of your project:

```
# Supabase
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your-anon-key
SUPABASE_SERVICE_KEY=your-service-role-key

# Database (keep your existing database URL)
DATABASE_URL=postgres://...

# OpenAI (keep your existing OpenAI key)
OPENAI_API_KEY=your-openai-key
```

### For Client-side

Create a `.env.local` file in the root of your project for client-side environment variables:

```
VITE_SUPABASE_URL=https://your-project-id.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key
```

### For Production

Add these environment variables to your production environment or hosting platform.

## Running Migrations

After setting up the environment variables, run the database migrations to add the Supabase ID column:

```
npm run migrate
```

## Testing Authentication

1. Start your application with `npm run dev`
2. Go to the login page and test registration
3. Check that email verification works properly
4. Test login after verification
5. Test password reset functionality

## Troubleshooting

If you encounter any issues:

1. Check the browser console for client-side errors
2. Check the server logs for backend errors
3. Verify that all environment variables are correctly set
4. Ensure your Supabase project's auth settings are properly configured
5. Check that your database migrations have run successfully

## Additional Resources

- [Supabase Authentication Documentation](https://supabase.com/docs/guides/auth)
- [Supabase JavaScript Client Documentation](https://supabase.com/docs/reference/javascript/auth-signup)
- [Supabase Policies Documentation](https://supabase.com/docs/guides/auth/row-level-security) (for advanced permissions)